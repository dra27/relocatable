#!/usr/bin/env bash

if ! declare -F branch > /dev/null; then
  echo "This script isn't intended to be executed directly">&2
  exit 1
fi

# The base commits for each branch provide an update to the version and, for the
# CI workflows, ensure that tools/autogen exists and can be used by a workflow

  # The ci-unity set of branches bring the workflows on 4.08-4.13 in sync with
  # #12849 (Dec 2023).
  # The log of each of the ci-unity-4.xx branches in order gives the sequence
  # of backports required to get to PR#12849 - i.e. each ci-unity-4.xx branch
  # backports things from strictly the next version (i.e. ci-unity-4.09 contains
  # things merged in 4.10) with each branch being cumulative. The stacking
  # process works in reverse, so the effect is that the backport grows as the
  # rebasing works back through old versions. Each of the ci-unity-4.xx-4.yy
  # branches contain patches or fixups required for version 4.yy against these
  # patches.
branch ci-unity-4.09 upstream/4.09
fixup ci-unity-4.09-4.08 upstream/4.08 2
branch ci-unity-4.10 upstream/4.10
fixup ci-unity-4.10-4.09 upstream/4.09 0
branch ci-unity-4.11 upstream/4.11
fixup ci-unity-4.11-4.08 upstream/4.08 0
branch ci-unity-4.12 upstream/4.12
fixup ci-unity-4.12-4.11 upstream/4.11
fixup ci-unity-4.12-4.10 upstream/4.10 2
fixup ci-unity-4.12-4.09 upstream/4.09
branch ci-unity-4.13 upstream/4.13
fixup ci-unity-4.13-4.12 upstream/4.12
fixup ci-unity-4.13-4.11 upstream/4.11 0
fixup ci-unity-4.13-4.10 upstream/4.10 0
fixup ci-unity-4.13-4.09 upstream/4.09
fixup ci-unity-4.13-4.08 upstream/4.08 5

  # Wind forwards to #12664 (Jul 2024). Patching is just for #13065 which added
  # macOS arm64 testing, which is 4.10, 4.12 and 4.13 only
branch unified-ci-batch-1 upstream/4.13
fixup unified-ci-batch-1-4.11 upstream/4.11 3
fixup unified-ci-batch-1-4.10 upstream/4.10 3
fixup unified-ci-batch-1-4.09 upstream/4.09 3
  # #9488 4.12 fixes an issue introduced in #9211 in 4.11 which leads to an
  # undefined Makefile variable.
branch ci-9488 upstream/4.11
  # Wind forwards to #14013 (May 2025). Patch for 4.08 is to deal with disabling
  # the vmthreads and graphics libraries in the minimal test (both were removed
  # in OCaml 4.09)
branch unified-ci-batch-2 upstream/4.13
fixup unified-ci-batch-2-4.08 upstream/4.08 0

branch appveyor-setup upstream/4.14

branch apple-arm64-4.08 upstream/4.08
branch apple-arm64-4.09 upstream/4.09
fixup apple-arm64-4.08-fixes upstream/4.08 0
branch apple-arm64-4.11 upstream/4.11
fixup apple-arm64-4.11-4.10 upstream/4.10 0

  # - Fix parallel generation of header programs (#2267 + #8626; 4.09.0)
  #   Prerequisite for faster-flexdll on 4.08 (and also fixes Cygwin compilation
  #   on 4.08). This branch is structured to allow the patches to be used by
  #   opam.
branch merge-headers upstream/4.08

  # fix-autogen appears first, since it affects any commit touching configure.
  # Part of #10254 allows overriding the autoconf command in autogen.
  # They don't need to go in branches, however.
#  BRANCHES=(fix-autogen@4.08 check-configure@4.12)

  # Existing patches in maintenance branches and in opam-repository
  # - Compatibility with -fno-common default in GCC 10 (#9180; 4.09.1)
  #   opam-repository carries a different patch; passing -fcommon to configure
#  BRANCHES+=(fcommon@4.08)
branch win32graph-fcommon upstream/4.08
  # - SIGSTKSZ change in glibc 2.34 (#10266 and #10726; 4.13.0, 4.14.0)
  #   opam-repository carries this patch already
#  BRANCHES+=(sigaltstack sigaltstack-4.09@fixup)
  # - Correct configure script for 4.09.1
  #   configure wasn't regenerated; opam-repository carries this patch already
#  BRANCHES+=(fix-4.09.1-configure@4.09)

  # Existing patch in maintenance branch and proposed for opam-repository
  # - Fix installing tools links when bytecode programs disabled
  #     (#8858; 4.09.1, 4.10.0)
  #   Permits the disabling of bytecode tool installation on 4.08+
#  BRANCHES+=(install-bytecode@4.08)

  # Existing patches in maintenance branches and proposed for opam-repository
  # - Allow the reconfigure target on Windows (#8996; 4.09.1, 4.10.0)
  #   **Critical**: graphics.4.08.0 and graphics.4.08.1 require it
#  BRANCHES+=(win-reconfigure@4.08)
  # - Compatibility mingw-w64's ANSI stdio.h changes
  #     (#9939; 4.10.2, 4.11.2, 4.12.0)
  #   **Critical**: OCaml doesn't build with mingw-w64 headers 8.0.0+ otherwise
#  BRANCHES+=(mingw-headers@4.09)

  # Proposed back-ports to opam-repository only
  # - SUBST_STRING macro in utils/Makefile (from #8650; 4.10.0)
  #   Dependency of #9285
  # - Link all DLLs with -static-libgcc on mingw32 (#9285 and #10046; 4.12.0)
  #   **Critical**: i686 mingw-w64 OCaml requires a runtime DLL not available by
  #                 default
  # - Update config.sub and config.guess (no PR; 4.12.0)
#  BRANCHES+=(makefile-tweaks@4.09 static-libgcc@4.11 config.guess@4.11 config.guess-4.09@4.09)
#  XXX makefile-tweaks is already in ci-unity-4.09
branch static-libgcc upstream/4.11

# XXX Go through these to ensure that they split Changes in the same way

  # Proposed back-ports to maintenance branches and opam-repository:
  # - Bootstrapping FlexDLL
  #     (#9700; 4.12.0)
branch fix-flexdll-bootstrap upstream/4.11

  # XXX At the moment, the previous work for this backported #9925 (fdebug-prefix-map-PR)
  #     but skipping that at the moment as hopefully the compiled-primitives branch means
  #     that becomes unnecessary
  # - Compatibility with mingw-w64 headers 8.0.0 (#10062; 4.12.0)
  #   **Critical**: both mingw-w64 ports require this tweak for the headers to
  #                 behave correctly if user-code loads <stdio.h> (or other
  #                 headers pulling in mingw.h) before <caml/config.h>
branch fix-mingw-lld upstream/4.11

  # - Compatibility with binutils 2.36+ on mingw-w64 x64
  #     (#10351; 4.12.1, 4.13.0)
  #   **Critical**: fix in 4.12.1 is too high risk to back-port, this alters the
  #                 linker flags instead. mingw-w64 x64 is unusable without this
branch fix-binutils-2.36 upstream/4.11

  # - FlexDLL bootstrapping overhaul (#10135; 4.13.0)
  #   Vastly improves the build performance and reliability on Windows.
  #   Simplifies the packaging for ocaml-base-compiler.
  # XXX There are manual rebasings in faster-flexdll-x.yy-backport from 2024.
  #     It would be worth getting them onto a common base and checking
  #     commit-by-commit how these look (or just squashing this into one)
  # XXX It would also be worth tidying up the flexdll-4.11 patch branch.
branch faster-flexdll-4.12 upstream/4.12
fixup faster-flexdll-4.11 upstream/4.11
fixup faster-flexdll-4.08 upstream/4.08

  # - Add --disable-stdlib-manpages to configure (#8835 and #9335; 4.11.0)
  #   --disable-stdlib-manpages was added in 4.10.0 but broken by the time of
  #   release. The build is very time-consuming, especially on Windows, so this
  #   is recommended to allow the Windows configuration to use it
branch fix-stdlib-manpages-4.09 upstream/4.09
branch fix-stdlib-manpages upstream/4.10

  # - Add --disable-ocamltest to configure (#9250; 4.11.0)
  #   ocamltest is never installed, but the build uses time and resources.
  #   Propose back-porting this to save time on older compiler builds.
#  BRANCHES+=(disable-ocamltest@4.10)

  # These all simplify the testing infrastructure, but aren't required:
  # - Add --enable-warn-error (from #9625; 4.12.0)
  # - Fix warn-error issues with win32graph (ocaml/graphics#28)
  # - Allow make's default target to build the compiler (from #8951; 4.10.0)
  # - Revert the Wdeclaration-after-statement dev-error
  #     (from #1176; 4.11.0 - back-ports part of #11051; 5.0.0)
  # - Don't define _INTEGRAL_MAX_BITS in Windows stat implementation
  #     (#9686; 4.12.0)
  # - autoconf tweaks (#8639; 4.11.0)
  # - fix tools/check-symbol-names (#9260; 4.11.0)
#  BRANCHES+=(win32-safe-string@4.08 _integral_max_bits@4.11 declaration-after-statement@4.14 warn-error@4.11 make-default-target@4.09 autoconf-tweak@4.10 autoconf-tweak-4.09@fixup~1 runtime_name_escape@4.10)

  # - CI tweaks and backports
#  BRANCHES+=(improve-depend-from-scratch@4.09 ocamltest 32bit-gha-test@5.0 github-attributes@4.11 ocamltest-4.14@4.14 ocamltest-4.12@4.12 ocamltest-4.11@4.11 ocamltest-tweak@4.11 ocamltest-4.09@fixup~2 fix-test-4229@4.09 ocamltest-4.08@4.08 faster-appveyor@4.10)

  # This slightly simplifies the patch rebasing infrastructure, as it stops
  # configure from being completely rejected
  # - Ensure that configure can be patched (#9847; 4.12.0)
#  BRANCHES+=(no-configure@4.11)

  # Back-ports
  # NB These back-ports have been selected to ease the back-porting of the main
  # PRs. Some of the back-ports will want tweaking after the PRs are finalised.
  # For example, back-porting #1941 and #8992 makes the -set-global-string
  # portion of enable-relative rebase more easily, but the better back-port
  # would be to add the argument using the pre-4.10 mechanisms.
  # - Original long shebang "fix" (#8622; 4.10.0)
  # - Hardening of -use-runtime for spaces and symbols (#11112; 5.0.0)
  # - Expose Config.ext_exe (from #9652; 4.12.0)
  # - Caml_inline macro (from #1176; 4.11.0)
  # - _T / T macro (#2075; 4.09.0)
  # - ocamlrun -config (#9284; 4.13.0)
  # - Eliminate tools/ocamlmklibconfig.ml (#10204; 4.13.0)
  # - Add HAS_REALPATH to s.h (from #10047; 4.13.0)
  # - Add runtime/build_config.h (from #10451; 4.13.0)
  # - Simplification of ocamlcp/ocamloptp processing (#1941; 4.09.0)
  # - Share argument implementations (from #8992; 4.10.0)
branch rename_T_macro upstream/4.08

#  BRANCHES+=(ext_exe@4.11 shebang@4.09 c89_headers@4.10 rename_T_macro@4.08 use-runtime-evil@4.14 use-runtime-evil-fixup@fixup ocamlrun-config@4.12 ocamlmklibconfig-cleanup@4.12 unix-realpath@4.12 build_config@4.12 build_config-4.11@fixup build_config-4.08@fixup ocamlc-dedup3@4.08 shared_args-4.09@4.09 shared_args-4.08@4.08)

  # PRs from the original relocatable set which are now merged
  # - #12726 (5.2.0) - fixed by @nojb but a similar fix had been in misc-win-fixes
  #     22e7c76fe87df895f5dd202b53885abed9832fd5 10-Nov-2023
  # - #12896 (5.3.0) - compiled-primitives
  #     733c2c58341302949ce5598273f7679222abef85 16-Jan-2024
  # - #12751 (5.3.0; 5.2.0) - one-camlheader and target-bindir
  #     733c2c58341302949ce5598273f7679222abef85 2-Feb-2024
  # - #13279 (5.3.0) - tools-vnum **not included in the back-ports**
  #     61b971d4eca0acda1327771f64dd0c52ff1376e3 4-Jul-2024
  # - #13492 (5.4.0) - ocamlrun-config-env (was in misc-win-fixes)
  #     e30d23feaace434e9d85d81b9103e4bb2f6caf66 30-Sep-2024
  # - #13520 (5.4.0; 5.3.0; 5.2.1) - partial-revert-12108 (was in installation-tests) **might be needed for 5.1?**
  #     8f8ee0a9d0c318d39ea7156838d1783263223d4a 23-Oct-2024
  # - #13496 (5.4.0) - ld-warning **not included in the back-ports**
  #     718a664b2627c9b086f213f0341399175b3a8da3 5-Nov-2024
  # - #13494 (5.4.0) - windows-ln
  #     b204bc49ea54cf6ef6bcec0ffaa511b06021f665 9-Jan-2025
  # - #13497 (5.4.0) - caml_stat_strndup
  #     be96495a3fa52166793faf3aaf20a1f5b3cfa0a2 22-Jan-2025
  # PRs which are in-flight:
  # - #13723 (5.4.0?) - flexlink-FLEXDIR
  # - #13728 (5.4.0?) - Sys.interpreter

  # Branch Structure
  # - relocatable-base-trunk is the consolidation point during upstreaming and
  #   gets moved with each merge, until eventually it is unnecessary.
  # - relocatable-base-x.y contains a single commit on upstream/x.y which
  #   changes the version of the compiler for this branch. Any commits on these
  #   branches are not backported to previous versions.
  # - relocatable-backports-x.y contains everything added between release x.y
  #   and the release after it. i.e. if a required branch was merged in 5.2 then
  #   the commits are put into relocatable-backports-5.1. They do not need to be
  #   put in relocatable-backports-5.0 as that's automatically handled as part
  #   of rebasing the consolidated commit series 5.1. It should be based on the
  #   same upstream/x.y commit as relocatable-base-x.y.
  # XXX TODO Would be
  # which should both be based on the same commit on the target upstream
  # maintenance branch. The relocatable-base- branch contains everything merged into trunk which needs
  # to be backported to this version. The relocatable-testing- branch contains
  # editing commits applied to the main relocatable-testing branch (e.g. version
  # number updates).
  # ...
  # XXX Branches while in development sit on relocatable-testing
  # XXX not relocatable-testing-5.3 but rather relocatable-version-5.3
  # XXX relocatable-base-5.3 must be a commit with nothing that needs backport
  # XXX Might introduce relocatable-testing-x.y if that becomes necessary - i.e. a place to put the branches which are definitely needed for testing
  #     but ought to disappear in the actual upstreaming.

  # Notes:
  # - When ld.conf-search when rebasing to 5.1 will want to pull in the commits from the original
  #   version
  # - When enable-relative is rebased back past #12108 (5.1.0) the variables in Makefile.common will need to be renamed (similarly with Makefile merges)
  # - runtime-suffixed may require #13019 as an easier backport (systhreads flags)

  # Branches
  #  - misc-win-fixes (dispatched to separate PRs)
  #  - partial-revert-12108 (proposed for 5.1.2/5.2.1/5.3.0 in #13520)
  #  - windows-ln (proposed for 5.4.0 in #13494)
  #  - tools-vnum (merged)
  #  - installation-tests
  #  - one-camlheader (merged)
  # XXX This is first because it affects part of the backports, but only in CI terms
#  BRANCHES+=(relocatable-backports-5.1@5.1 relocatable-backports-5.2@5.2 relocatable-backports-5.3@5.3 relocatable-testing)
  # XXX Decision to take on the backporting for appveyor-configure ... it's a CI
  #     improvement... that may just be best done on the standard rebase?
  # XXX cygwin-bootstrap is likely to be backported to upstream/5.2 and upstream/5.3 anyway
  # XXX cygwin-3.5.5 is temporary to pin 5.3 and earlier back to Cygwin 3.5.4 (removed)
  # XXX relocatable-testing is merged into installation-tests at the moment
  # XXX reproducible-cmt is temporarily in-place for 5.3 and earlier - the test should in reality be updated to cope
#  BRANCHES+=(relocatable-backports-5.2@5.2 relocatable-backports-5.3@5.3 relocatable-backports-5.4@5.4 appveyor-configure appveyor-configure-fix@fixup cygwin-bootstrap apt-update)
#  BRANCHES+=(4.13-unified-gha@4.13)
  # XXX build_config and ocamlrun-config should really be relocatable-backports-4.12
branch build_config upstream/4.12
fixup build_config-4.11 upstream/4.11 0
fixup build_config-4.08 upstream/4.08 0
branch ocamlrun-config upstream/4.12

  # XXX This needs tidying up
branch runtime-variant-fixes upstream/4.08

branch ocaml-variants upstream/4.13
fixup ocaml-variants-4.11 upstream/4.11 0
fixup ocaml-variants-4.09 upstream/4.09 0

# #10243 - check-configure - OCaml 4.13
#   This allows the autoconf command to be substituted in tools/autogen
#branch backport-10243 upstream/4.12

branch relocatable-backports-4.09 upstream/4.09
branch relocatable-backports-4.11 upstream/4.11
branch relocatable-backports-4.12 upstream/4.12
branch relocatable-backports-4.13 upstream/4.13
fixup relocatable-backports-4.13-4.11 upstream/4.11 1
branch relocatable-backports-4.14 upstream/4.14
branch relocatable-backports-5.0 upstream/5.0
branch relocatable-backports-5.1 upstream/5.1

# #12751 - runtime-launch-info - OCaml 5.2
branch backport-runtime-launch-info upstream/5.1
fixup runtime-launch-info-5.0 upstream/5.0 5
fixup runtime-launch-info-4.14 upstream/4.14 3
fixup runtime-launch-info-4.13 upstream/4.13 3
fixup runtime-launch-info-4.12 upstream/4.12 3
fixup runtime-launch-info-4.09 upstream/4.09 3

# #12896 - compiled-primitives - OCaml 5.3
branch backport-compiled-primitives upstream/5.2
fixup compiled-primitives-5.1 upstream/5.1 0
fixup compiled-primitives-5.0 upstream/5.0 0
fixup compiled-primitives-4.13 upstream/4.13 0
fixup compiled-primitives-4.12 upstream/4.12 0

branch relocatable-backports-5.2 upstream/5.2
branch relocatable-backports-5.3 upstream/5.3
fixup relocatable-backports-5.3-4.14-2 upstream/4.14 11
fixup relocatable-backports-5.3-5.0 upstream/5.0 9
fixup relocatable-backports-5.3-5.1 upstream/5.1 13
fixup relocatable-backports-5.3-4.14 upstream/4.14
fixup relocatable-backports-5.3-4.13 upstream/4.13 10
branch relocatable-backports-5.4 upstream/5.4

#These are not supposed to move, so maybe they shouldn't be being included here at all?
#Perhaps if we specify _no_ second parameter then that gets interpreted as that the commit
#should definitely be merged in upstream/trunk?
#branch cygwin-3.5.5 upstream/trunk
#branch appveyor-configure upstream/trunk
#branch cygwin-bootstrap upstream/trunk
#branch apt-update upstream/trunk

# These PRs are in-flight, so they are permitted to be on a _later_ commit
#branch Sys.interpreter relocatable-base-trunk
#branch more-ci-tweaks relocatable-base-trunk
#branch in-prefix-test relocatable-base-trunk

# XXX This branch folds into relocatable-backports-5.3 when the PR is merged??
#branch Sys.interpreter-5.3 relocatable-base-5.3

#  BRANCHES+=(windows-ln tools-vnum installation-tests windows-ln-5.0@fixup windows-ln-4.11@fixup one-camlheader-4.13@fixup~1)
# XXX TODO -> relocatable-backports-5.3 (order above - not sure if tools-vnum needed yet) BRANCHES+=(tools-vnum@trunk ocamlrun-config-env@trunk partial-revert-12108@trunk windows-ln@trunk)
# XXX When merged, Sys.interpreter-5.3 folds into the backport, obviously. Actually no: Sys.interpreter will fold into the installation-tests backport
# XXX flexlink-FLEXLINK is merged
#  BRANCHES+=(reproducible-cmt@trunk Sys.interpreter@trunk Sys.interpreter-5.3@fixup installation-tests installation-tests-5.4@fixup~10 installation-tests-5.3@fixup~10 installation-tests-5.2@fixup~10)
branch backport-unified-header upstream/5.4
fixup unified-header-4.14 upstream/4.14 0

# #14014 - in-prefix-test - OCaml 5.5
branch backport-in-prefix-test upstream/5.4
for version in 5.3 5.2 5.1 5.0 4.14 4.13 4.12 4.11 4.10 4.09 4.08; do
  case $version in
    4.13|4.14) fixup='';;
    *) fixup='1';;
  esac
  fixup in-prefix-test-$version upstream/$version $fixup
done

# XXX relocatable-testing is now entirely commits which will never go upstream
# XXX minor-appveyor needs opening as a PR
# XXX Any additional "for testing purposes" commits can go after minor-appveyor
branch relocatable-testing relocatable-base-trunk
branch minor-appveyor upstream/5.4

  #  - target-bindir (merged)
#  BRANCHES+=(target-bindir-5.0@fixup)
  #  - ld.conf-CRLF
  #  - ld.conf-search
#  BRANCHES+=(ld.conf-CRLF ld.conf-search)
  #  - ld.conf-relative
#  BRANCHES+=(ld.conf-relative unified-ld.conf-relative@4.14)
#  BRANCHES+=(ld.conf-relative)
branch ld.conf relocatable-base-trunk
fixup ld.conf-5.1 upstream/5.1 1
fixup ld.conf-4.14 upstream/4.14
fixup ld.conf-4.13 upstream/4.13

  #  - compiled-primitives (merged)
#  BRANCHES+=(compiled-primitives-5.2@5.2 compiled-primitives-5.0@fixup compiled-primitives-4.12@fixup)
  #  - enable-relative (the first two commits are proposed for 5.4.0 in #13497 in caml_stat_strndup)
#  BRANCHES+=(caml_stat_strndup enable-relative unified-enable-relative-5.0@fixup~1 unified-enable-relative-4.x@4.14@fixup unified-enable-relative-4.11@4.11@fixup cmmgen-4.09@fixup~1 unified-enable-relative-4.08@4.08@fixup)
branch temp-enable-relative-5.4 upstream/5.4
fixup temp-enable-relative-4.13 upstream/4.13 0

branch enable-relative relocatable-base-trunk
for version in 5.4 5.3 5.2 5.1 5.0 4.14 4.13 4.12 4.11 4.10 4.09 4.08; do
  case $version in
    5.2) fixup='6';;
    4.10) fixup='12';;
    *) fixup='';;
  esac
  fixup unified-enable-relative-$version upstream/$version $fixup
done
fixup unified-enable-relative relocatable-base-trunk
# While it would be nice to have a version of the combined PR which has these
# NFPR commits and then a version (for the Draft on ocaml/ocaml) which doens't,
# 5.4 and trunk are going to be close enough that it's easier just to put the
# NFPR on 5.4 and earlier.
branch unified-enable-relative-NFPR upstream/5.4
fixup unified-enable-relative-NFPR-4.14 upstream/4.14

  #  - ld-warning (proposed for 5.4.0 in #13496)
#  BRANCHES+=(ld-warning ld-warning-5.0@fixup)
# This disappears permanently at the next rebase
#  BRANCHES+=(ld-warning@trunk)
  #  - runtime-id
#  BRANCHES+=(runtime-id runtime-id-5.0@fixup runtime-id-4.14@fixup runtime-id-4.13@fixup runtime-id-4.12@fixup runtime-id-4.11@fixup runtime-id-4.10@fixup runtime-id-4.09@fixup runtime-id-4.08@fixup)
# removed compiled-primitives@5.2 runtime-id-5.3@fixup runtime-id-5.2@fixup
#  BRANCHES+=(runtime-id)
  #  - runtime-suffixing
#  BRANCHES+=(runtime-suffixing unified-runtime-suffixing@trunk@fixup unified-runtime-suffixing-5.0@5.0@fixup unified-runtime-suffixing-4.14@4.14@fixup unified-runtime-suffixing-4.12@fixup unified-runtime-suffixing-4.11@fixup~1)
#  BRANCHES+=(runtime-suffixing)
  #  - camlheader-search
#  BRANCHES+=(camlheader-search unified-camlheader-search@fixup~1 unified-camlheader-search-5.0@fixup~1 unified-camlheader-search-4.14@fixup~1 unified-camlheader-search-4.13@fixup~1 unified-camlheader-search-4.12@fixup~1 unified-camlheader-search-4.11@fixup~1 unified-camlheader-search-4.10@fixup~1)
#  BRANCHES+=(runtime-searching unified-relocatable-test@trunk@fixup)
# XXX runtime-searching-5.3 backports Config.compression_c_libraries which won't
#     be included in the final backport
  # XXX COMBAK 5.2 will need tidying in the Remove metadata + post-bootstrap commits to deal with the lack of _LINKFLAGS
#  BRANCHES+=(temp-build-sys@5.2)
# XXX runtime-searching-5.3 is a _temporary_ backport
branch runtime-searching-5.3 upstream/5.3
fixup runtime-searching-5.0 upstream/5.0 0

branch runtime-searching relocatable-base-trunk
fixup unified-runtime-searching relocatable-base-trunk
fixup unified-relocatable-test-5.3 upstream/5.3 2
for version in 5.4 5.3 5.2 5.1 5.0 4.14 4.13 4.12 4.11 4.10 4.09 4.08; do
  case $version in
    5.2|5.3) fixup='13';;
    4.10) fixup='16';;
    *) fixup='';;
  esac
  fixup unified-runtime-searching-$version upstream/$version $fixup
done
branch unified-runtime-searching-NFPR upstream/5.4

  # XXX Both these branches are severely "in-flight" and need considerable testing!
branch export-ignore-relocatable relocatable-base-trunk
fixup export-ignore-relocatable-4.12 upstream/4.12 2
branch ranlib upstream/4.13
fixup ranlib-4.08 upstream/4.08 0
branch asmcmp upstream/4.12
fixup asmcmp-4.08 upstream/4.08 0
branch std_exit.p.cmx upstream/4.08
branch bigarray-mli upstream/4.14

branch opam-install-file relocatable-base-trunk
fixup opam-install-file-5.4 upstream/5.4 4
for version in 5.2 5.1 5.0 4.14 4.13 4.12 4.11 4.10 4.08; do
  fixup opam-install-file-$version upstream/$version
done
branch install_changes upstream/4.13

  # Turn off the flambda test in CI on 4.08 for now, since enable-relative isn't
  # fully backported for it.
branch no-flambda-4.08 upstream/4.08

# Temporary patches placed at the end of the queue to reduce rebuilds. These
# should be in relocatable-testing or earlier in the series
#branch temporary-patches relocatable-base-trunk

branch stop-backporting

branch ocaml-config relocatable-base-trunk
for branch in PATH_MAX \
              refactor-caml_search_dll_in_path \
              cygwin-path-search \
              remove-caml_cds_file \
              header-parasites \
              refactor-unix-path-search \
              launcher-caml_executable_name \
              launcher-image-handoff unified-launcher-fixes \
              environmental-emptiness \
              ocamldoc-epoch \
              empty-paths unified-empty-env \
              loading-errors \
              dynamic-tidying \
              set-runtime-default unified-set-runtime-default \
              win32unix-libopts \
              threads.cmxs \
              partial-ld unified-installation-tests2 \
              flexlink-entrypoint \
              bootstrap-config-undoc \
              clang-cl-flexdll \
              in-prefix-tweaks \
              extern-compat \
              clean-bootstrap; do
  case $branch in
    unified-*)
      case $branch in
        unified-set-runtime-default) fixup='';;
        *) fixup='0';;
      esac
      fixup $branch relocatable-base-trunk $fixup;;
    *)
      branch $branch relocatable-base-trunk;;
  esac
done
